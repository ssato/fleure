# .. seealso:: https://setuptools.readthedocs.io/en/latest/setuptools.html#configuring-setup-using-setup-cfg-files
#
# .. seealso:: https://wheel.readthedocs.io/en/stable/
[bdist_wheel]
universal = 1

[metadata]
name = fleure
# version = ... # todo
description = Package level static analysis tool for RPM-based Linux systems
long_description =
    fleure (フルーア) is a package level static analysis tool for systems
    running RPM-based linux distributions such like RHEL (primary target),
    CentOS and Fedora.

    fleure loads RPM database files of target hosts, tries to fetch updateinfo
    data from yum repos and do some analysis based on these data.

author = Satoru SATOH
author_email = ssato@redhat.com
maintainer = Satoru SATOH
maintainer_email = ssato@redhat.com
license = AGPLv3+ and GPLv3+
url = https://github.com/ssato/fleure
classifiers =
    Development Status :: 4 - Beta
    Intended Audience :: Developers
    Programming Language :: Python
    Programming Language :: Python :: 2
    Programming Language :: Python :: 3
    Programming Language :: Python :: 2.7
    Programming Language :: Python :: 3.6
    Programming Language :: Python :: 3.7
    Environment :: Console
    Topic :: Utilities

[options]
include_package_data = True
packages = find:

# minimum dependencies.
install_requires =
        setuptools

[options.packages.find]
# where = src
exclude =
        tests
        tests.*

[options.entry_points]
console_scripts =
        fleure_cli = fleure.cli:main

[options.data_files]
/etc/fleure.d =
        data/conf/10_default.yml
        data/conf/20_rh_cdn_vs_rhn_classic.yml
        data/conf/50_keywords.yml

share/fleure/templates/2/ja =
        data/templates/2/ja/rpm_depgraph_gv.css.j2
        data/templates/2/ja/rpm_depgraph.html.j2
        data/templates/2/ja/rpm_depgraph_gv.dot.j2

# .. todo::
#        data/templates/2/ja/group_packages.rst
#        data/templates/2/ja/group_x_errata_tables_packages.rst
#        data/templates/2/ja/group_security_errata_tables_errata.rst

#share/fleure/templates/2/en = 
#        data/templates/2/en/*.rst
#        data/templates/2/en/*.j2

# .. todo::
# (os.path.join(get_python_lib(), "fleure/locale/ja/LC_MESSAGES"),
#  ["fleure/locale/ja/LC_MESSAGES/fleure.mo"]),
